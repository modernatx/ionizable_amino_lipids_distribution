############# This code is designed to insert any kind of lipid ############
############# to a lipid bilayer generated by CHARMM-GUI ###################
source procedures.tcl
############ Initial parameters ###########
#1 - output directory
set output_dir "../output"
#2 - template pdb file
set template_pdb [ list "../templates/RN_U.pdb" "../templates/RP_U.pdb" "../templates/SP_U.pdb"]
#3- template psf file
set template_psf [ list "../parametrization/R_0/SM86-R-0.psf" "../parametrization/R_1/SM86-R-1.psf" "../parametrization/S_1/SM86-S-1.psf"]
#4 - initial pdb
set initial_pdb "../charmm-gui/namd/step5_charmm2namd.pdb"  ##Add your own prebuilt CHARMM-GUI equilibrated lipid bilayer system pdb file
#5 - initial psf
set initial_psf "../charmm-gui/namd/step5_charmm2namd.psf" ##Add your own prebuilt CHARMM-GUI equilibrated lipid bilayer system psf file
#6 - choosing the lipid in the initial system to exhange
set exchange_selectin "DSPC"
#7 - number of exhanges in upper leaflet
set number_novel_upper [list "7" "7" "7" "7"]
#8 - number of exhanges in lower leaflet
set number_novel_lower [list "7" "7" "7" "7"]
#9 - novel lipids resname 
set NOVEL   [list "RN" "SN" "RP" "SP"]
#10 - initial dcd, equilibrated using NAMD
set initial_dcd "../charmm-gui/namd/step7_production.dcd"
#11 - initial restart
set initial_restart "../charmm-gui/namd/step7_production"
#12 - toppar directory
set toppar "../toppar"
#13 - force constant for grid forces
set FC 10
# total number of exchanges in upper and lower leaflets
set N1 0
foreach n $number_novel_upper {
	set N1 [expr {$N1 + $n}]
}
set N2 0 
foreach n $number_novel_lower {
	set N2 [expr {$N2 + $n}]
}
# We need these two files later on
package require exectool
::ExecTool::exec cp charmmlipid2amber.py  $output_dir
::ExecTool::exec cp charmmlipid2amber.csv $output_dir
#chanign the directory
cd $output_dir
##############################################
# generating templates
mol delete all
set counter 0
foreach pdbfile $template_pdb psffile $template_psf {
	::ExecTool::exec rm -f template-$counter-upper.psf template-$counter-upper.pdb	
	::ExecTool::exec rm -f template-$counter-lower.psf template-$counter-lower.pdb
	template  $pdbfile $psffile $counter
	set counter [expr {$counter + 1}]
}

# inputing the system made by charmmgui and equilibrated using NAMD
mol new $initial_psf
mol addfile $initial_dcd waitfor all

# generating necessary colvar files
::ExecTool::exec rm -f colvar_0.conf gsmd.0.conf ref_0.pdb
colvars_0
conf_0 $toppar $initial_pdb $initial_psf $initial_restart $FC

# resid of lipids chosen to exhange
set LIPID_resids_upper [lipid_resids_upper $exchange_selectin $N1]
set LIPID_resids_lower [lipid_resids_lower $exchange_selectin $N2]

# COM of lipids chosen to exhange
set COM_upper [lipids_COM_upper $exchange_selectin $LIPID_resids_upper]
set COM_lower [lipids_COM_lower $exchange_selectin $LIPID_resids_lower]

# Changing the beta column of chosen lipids -- needed for performing grid simulation
set all [atomselect top all]
$all set beta 1
$all set occupancy 1
set beta_column [atomselect top "resname $exchange_selectin and resid $LIPID_resids_upper $LIPID_resids_lower"]
$beta_column set beta 0
$beta_column set occupancy 0
$all writepdb ref_0.pdb

# generating novel lipids 
mol delete all
set lipid_type_u [llength $number_novel_upper]
set n2 0
for {set i 0} {$i < $lipid_type_u} {incr i} {
	if {$i == 0} {
		set n1 0
	} else {
		set ii [expr {$i - 1}]
		set n1  [expr {[lindex $number_novel_lower $ii] + $n1}]
	}
	set n2 [expr {[lindex $number_novel_upper $i] + $n2}]
	for {set j $n1} {$j < $n2} {incr j} {
	
		set r1 [lindex $COM_upper $j]
		mol load psf [lindex $template_psf $i] pdb ../templates/template-$i-upper.pdb
		set all [atomselect top all]
		$all moveby $r1
		$all set resid $j
		$all set segname MEMU
		$all writepsf template_upper-$j.psf
		$all writepdb template_upper-$j.pdb
	}
}

mol delete all
set lipid_type_l [llength $number_novel_lower]
set n2 0
for {set i 0} {$i < $lipid_type_l} {incr i} {
        if {$i == 0} {
                set n1 0
        } else {
		set ii [expr {$i - 1}]
                set n1 [expr {[lindex $number_novel_lower $ii] + $n1}] 
        }
        set n2 [expr {[lindex $number_novel_lower $i] + $n2}]
        for {set j $n1} {$j < $n2} {incr j} {

                set r1 [lindex $COM_lower $j]
                mol load psf [lindex $template_psf $i] pdb ../templates/template-$i-lower.pdb
                set all [atomselect top all]
                $all moveby $r1
		set jj [expr {$j + $N1}]
                $all set resid $jj
                $all set segname MEML
                $all writepsf template_lower-$j.psf
                $all writepdb template_lower-$j.pdb
        }
}

# merging
merging_structure template_upper upper $N1
merging_structure template_lower lower $N2

mol delete all
package require psfgen
resetpsf

readpsf  lower.psf
readpsf  upper.psf

coordpdb lower.pdb
coordpdb upper.pdb

writepsf novel_lipids.psf
writepdb novel_lipids.pdb

for {set i 0} {$i < $N1} {incr i} {
       ::ExecTool::exec rm -f template_upper-$i.psf
	::ExecTool::exec rm -f template_upper-$i.pdb
}
for {set i 0} {$i < $N2} {incr i} {
	::ExecTool::exec rm -f template_lower-$i.psf
	::ExecTool::exec rm -f template_lower-$i.pdb
}
::ExecTool::exec rm -f lower.psf lower.pdb upper.pdb upper.psf volmap_out_0.dx

# generating the grid file - for the first grid simulation
mol delete all
mol load psf novel_lipids.psf pdb novel_lipids.pdb
set all [atomselect top all]
volmap density $all -res 1.0 -radscale 5.0 -weight mass -o volmap_out_0.dx

# running the first gsmd simulation
puts "running NAMD for the 1st GSMD"
package require exectool
::ExecTool::exec rm -f gsmd.0.log gsmd.0.dcd 
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.0.conf > gsmd.0.log
puts "Done with the first NAMD GSMD"

# remving the selecting lipids, soon to be replaced by  SM lipids
mol delete all
mol new $initial_psf
mol addfile gsmd.0.dcd waitfor all
set all [atomselect top "segname MEMB and not (resname $exchange_selectin and resid $LIPID_resids_upper $LIPID_resids_lower)"]
$all writepsf lipids_removed.psf
$all writepdb lipids_removed.pdb

# merging novel and bulk lipids
mol delete all
package require topotools 1.6
set midlist {}
set mol [mol new lipids_removed.psf  waitfor all]
mol addfile lipids_removed.pdb
lappend midlist $mol
set mol [mol new novel_lipids.psf waitfor all]
mol addfile novel_lipids.pdb $mol
lappend midlist $mol
set mol [::TopoTools::mergemols $midlist]
animate write psf new_system.psf $mol
animate write pdb new_system.pdb $mol

# getting the dimension of the system
set fp [open "gsmd.0.xsc" r]
set file_data [read $fp]
set data [split $file_data "\n"]
set r1 [lindex $data 2 1]
set r2 [lindex $data 2 5]
set r3 [lindex $data 2 9]
close $fp

# preparing the new system in the amber forcefield to be simulated
solvate_ionized_vmd $r1 $r2 $r3
::ExecTool::exec python2 charmmlipid2amber.py -i ionized_vmd.pdb -o ionized_vmd_fixed.pdb -c charmmlipid2amber.csv
::ExecTool::exec sed -i "s/TIP3/WAT /g" ionized_vmd_fixed.pdb
::ExecTool::exec sed -i "s/OH2/O  /g" ionized_vmd_fixed.pdb

::ExecTool::exec rm -f run_tleap.sh tleap.in ionized.pdb ionized.prmtop ionized.inpcrd
tleap 
run_tleap
::ExecTool::exec chmod +x run_tleap.sh
::ExecTool::exec ./run_tleap.sh
::ExecTool::exec ambpdb -p ionized.prmtop < ionized.inpcrd > ionized.pdb

# generating the grid ref file
mol delete all
mol new ionized.prmtop
mol addfile ionized.pdb
set all [atomselect top all]
$all set beta 1
$all set occupancy 1
set NL [atomselect top "resname $NOVEL"]
$NL set beta 0
$NL set occupancy 0
$all writepdb ref_1.pdb

# moving the system to (0,0,0)
mol delete all
mol new ionized.pdb
set all [atomselect top all]
set rr1 [measure center $all]
set rr2 [vecinv $rr1]
$all moveby $rr2
$all writepdb ionized_centered.pdb

# getting the dimension of the system
mol delete all
mol new ionized.prmtop
mol addfile ionized_centered.pdb
set all [atomselect top "water"]
set MINMAX [measure minmax $all]
set r1 [expr {int(([lindex $MINMAX 1 0] - [lindex $MINMAX 0 0]) * 1 )}]
set r2 [expr {int(([lindex $MINMAX 1 1] - [lindex $MINMAX 0 1]) * 1 )}]
set r3 [expr {int(([lindex $MINMAX 1 2] - [lindex $MINMAX 0 2]) * 1 )}]

# generating second colvar and configuration file for the second grid simualation
colvars_1
set FC1 [expr {$FC  * 0.2}]
set FC2 [expr {$FC1 * 0.2}]
set FC3 [expr {$FC2 * 0.2}]
set FC4 [expr {$FC3 * 0.2}]
conf_1 ionized_centered.pdb ionized.prmtop gsmd.0 $FC1 $r1 $r2 $r3
conf_2 gsmd.2.conf ionized_centered.pdb ionized.prmtop  gsmd.1 $FC1 gsmd.2
conf_2 gsmd.3.conf ionized_centered.pdb ionized.prmtop  gsmd.2 $FC2 gsmd.3
conf_2 gsmd.4.conf ionized_centered.pdb ionized.prmtop  gsmd.3 $FC2 gsmd.4
conf_2 gsmd.5.conf ionized_centered.pdb ionized.prmtop  gsmd.4 $FC3 gsmd.5
conf_2 gsmd.6.conf ionized_centered.pdb ionized.prmtop  gsmd.5 $FC3 gsmd.6
conf_2 gsmd.7.conf ionized_centered.pdb ionized.prmtop  gsmd.6 $FC4 gsmd.7
conf_2 gsmd.8.conf ionized_centered.pdb ionized.prmtop  gsmd.7 $FC4 gsmd.8
conf_2 gsmd.9.conf ionized_centered.pdb ionized.prmtop  gsmd.8 0.0  gsmd.9
conf_2 gsmd.10.conf ionized_centered.pdb ionized.prmtop gsmd.9 0.0  gsmd.10
### second NAMD run
puts "running NAMD for the 2nd GSMD"
::ExecTool::exec rm -f par2psf.py ionized.psf
generate_psf ionized.pdb ionized.prmtop
::ExecTool::exec python3 par2psf.py

::ExecTool::exec rm -f gsmd.1.log gsmd.2.log gsmd.3.log gsmd.4.log  
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.1.conf > gsmd.1.log

ring_piercing 3.0 ionized.psf gsmd.1.dcd gsmd.1.coor

::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.2.conf > gsmd.2.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.3.conf > gsmd.3.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.4.conf > gsmd.4.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.5.conf > gsmd.5.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.6.conf > gsmd.6.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.7.conf > gsmd.7.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.8.conf > gsmd.8.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.9.conf > gsmd.9.log
::ExecTool::exec namd2 +setcpuaffinity +devices 0 +p6 gsmd.10.conf > gsmd.10.log
puts "Done with the NAMD 2nd GSMD"

### reading the trajectory to make sure we can read it 
mol delete all
mol new ionized.prmtop
mol addfile gsmd.5.dcd waitfor all
set all [atomselect top "all"]
$all writepdb lipid_equilibrated.pdb
